{
    parserClass="xyz.janek.simplates.language.parser.SimplatesParser"
    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
    psiClassPrefix="Simplates"
    psiImplClassSuffix="Impl"
    psiPackage="xyz.janek.simplates.language.psi.impl"
    psiImplPackage="xyz.janek.simplates.language.psi.impl"

    elementTypeHolderClass="xyz.janek.simplates.language.psi.SimplatesTypes"
    elementTypeClass="xyz.janek.simplates.language.psi.SimplatesElementType"
    tokenTypeClass="xyz.janek.simplates.language.psi.SimplatesTokenType"

    tokens=[
        SEPARATOR='regexp:\[---+]'
        CONTENT_TYPE_TOKEN='regexp:[a-z]+/[a-z]+ via [a-z_]+'
        FUNCTION_NAME='regexp:[a-zA-Z_][a-z0-9_]+'
        CODE='regexp:(?!(\[---|\s)).*'
        WHITE_SPACE='regexp: +'
        EOL='regexp:(\R|\n)'
        VIA='via'
    ]
}

simplates_file ::= template_segment *
template_segment ::= !<<eof>> (annotated_code_block | code_block)

code_block ::= (WHITE_SPACE | EOL | CODE) *
annotated_code_block ::= annotation code_block
annotation ::= SEPARATOR (WHITE_SPACE content_type EOL | [WHITE_SPACE] EOL)
content_type ::= CONTENT_TYPE_TOKEN [WHITE_SPACE VIA WHITE_SPACE FUNCTION_NAME]
